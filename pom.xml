<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com</groupId>
  <artifactId>August2025_SelfCreatedProject_POMLatest</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <properties>
        <selenium.java.version>4.34.0</selenium.java.version>
        <testng.version>7.10.2</testng.version>
        <gson.version>2.13.1</gson.version>
    <opencsv.version>5.11.2</opencsv.version>
    <poi.version>5.4.1</poi.version>
    <log4j.version>2.25.1</log4j.version>
    <extentreports.version>5.1.2</extentreports.version>
    <javafaker.version>1.0.2</javafaker.version>
        <!-- plugins versions -->
        <maven.compiler.version>3.11.0</maven.compiler.version>
        <maven.dependency.version>3.6.0</maven.dependency.version>
        <maven.jar.version>3.3.0</maven.jar.version>
        <maven.surefire.version>3.1.2</maven.surefire.version>
        <maven.resources.plugin>3.3.1</maven.resources.plugin>
        <!-- output directory -->
        <package.directory>${project.build.directory}/docker-resources</package.directory>
    </properties>
  <dependencies>
  <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.java.version}</version>
        </dependency>
<dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
     <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
    </dependency>

    <!-- OpenCSV -->
    <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${opencsv.version}</version>
    </dependency>

    <!-- Apache POI -->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${poi.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${poi.version}</version>
    </dependency>
    
 <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml-schemas</artifactId>
    <version>4.1.2</version>
</dependency>
    <!-- Log4j -->
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
    </dependency>

    <!-- ExtentReports -->
    <dependency>
        <groupId>com.aventstack</groupId>
        <artifactId>extentreports</artifactId>
        <version>${extentreports.version}</version>
    </dependency>

    <!-- JavaFaker -->
    <dependency>
        <groupId>com.github.javafaker</groupId>
        <artifactId>javafaker</artifactId>
        <version>${javafaker.version}</version>
    </dependency>
  </dependencies>
  <build>
  <resources>
    <!-- Copy all test resources into docker-resources -->
    <resource>
        <directory>src/test/resources</directory>
        <includes>
            <include>**/*</include>
        </includes>
        <targetPath>${project.build.directory}/docker-resources</targetPath>
    </resource>

    <!-- Copy testng.xml into docker-resources -->
    <resource>
        <directory>${basedir}</directory>
        <includes>
            <include>testng.xml</include>
        </includes>
        <targetPath>${project.build.directory}/docker-resources</targetPath>
    </resource>
</resources>
   <finalName>selenium-docker</finalName>
        <plugins>
			<!-- To compile the source code using specific java version. also to force IDE to change the settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
			<!-- To run the tests using specific parameters, change thread count, testng report output directory etc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
					<!-- mvn clean test -Dbrowser=chrome -Dselenium.grid.enabled=true -->
                    <systemPropertyVariables>
                        <browserName>chrome</browserName>
                        <isGridEnabled>false</isGridEnabled>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <file>src/test/resources/testng.xml</file>
						<!--file>src/test/resources/test-suites/flightregistration.xml</file-->
						<!--file>src/test/resources/test-suites/Suite_complete.xml</file-->
                    </suiteXmlFiles>
                    <parallel>tests</parallel>
                    <threadCount>1</threadCount>
                    <reportsDirectory>target/test-output</reportsDirectory>
                </configuration>
            </plugin>
			<!-- To copy all the dependencies to run our tests as part of "mvn package" -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${package.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<!-- To package our page objects, test classes into jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.version}</version>
                <configuration>
                    <outputDirectory>${package.directory}/libs</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
							<includes>**/*.class</includes>
							</configuration>
                    </execution>
                </executions>
            </plugin>
			<!-- To copy resources into the output directory -->
           <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-resources-plugin</artifactId>
    <version>${maven.resources.plugin}</version>
    <executions>
        <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
                <goal>copy-resources</goal>
            </goals>
            <configuration>
                <outputDirectory>${package.directory}/classes</outputDirectory>
                <resources>
                    <resource>
                        <directory>src/test/resources</directory>
                        <filtering>false</filtering>
                    </resource>
                </resources>
            </configuration>
        </execution>
    </executions>
</plugin>
        </plugins>
	</build>
</project>